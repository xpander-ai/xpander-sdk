name: Publish xpander-sdk to PyPi

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine requests packaging jq

      - name: Get Latest Version from PyPI and Increment
        run: |
          PACKAGE_NAME="xpander-sdk"
          PYPI_URL="https://pypi.org/pypi/${PACKAGE_NAME}/json"
          VERSION=$(curl -s $PYPI_URL | jq -r '.info.version' 2>/dev/null || echo "0.0.0")

          if [ "$VERSION" = "null" ] || [ -z "$VERSION" ] || [ "$VERSION" = "0.0.0" ]; then
            # First release - start with 2.0.0
            NEW_VERSION="2.0.0"
          else
            # Parse current version
            IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            
            # Check if current version is less than 2.0.0
            if [ "$MAJOR" -lt 2 ]; then
              # Upgrade to 2.0.0 for new SDK version
              NEW_VERSION="2.0.0"
            elif [ "$MAJOR" -eq 2 ] && [ "$MINOR" -eq 0 ]; then
              # Already in 2.0.x series, increment patch
              PATCH=$((PATCH + 1))
              NEW_VERSION="2.0.$PATCH"
            else
              # For versions 2.1.0 and above, increment patch
              PATCH=$((PATCH + 1))
              NEW_VERSION="$MAJOR.$MINOR.$PATCH"
            fi
          fi

          echo "Current PyPI version: $VERSION"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update Version in setup.py
        run: |
          sed -i "s/version=\"[0-9]\+\.[0-9]\+\.[0-9]\+\"/version=\"$NEW_VERSION\"/" setup.py

      - name: Build Package
        run: python -m build

      - name: Publish Package to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: twine upload dist/*

      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          name: "xpander-sdk v${{ env.NEW_VERSION }}"
          body: |
            ðŸš€ **New release of xpander-sdk: v${{ env.NEW_VERSION }}**
            
            ## What's New
            See the latest pull request for detailed changes.
            
            We're committed to updating the SDK often to provide the best experience and cutting-edge technologies for AI agents. This release includes the latest improvements, bug fixes, and new features to help you build powerful AI applications.
            
            ## Installation
            ```bash
            pip install xpander-sdk==${{ env.NEW_VERSION }}
            ```
            
            ## Documentation
            Visit [xpander.ai](https://www.xpander.ai) for full documentation and examples.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
